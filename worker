#!/usr/bin/env python
# -*- coding: utf-8 -*- 
if __name__ == "__main__":
	import os
	import fnmatch
	import sys
	from cgparser import XdebugCachegrindFsaParser, CgParseError
	from reader import CallTree, CallTreeAggregator, XdebugCachegrindTreeBuilder
	from dotm import DotBuilderm
	from stylers.default import DotNodeStyler

	directory = sys.argv[2]

	def getsubs(dir):
		strout = ''
		for file in os.listdir(dir):
		    if fnmatch.fnmatch(file, 'cachegrind.out.*'):
				file = os.path.join(dir, file)
				print ('Load: {}'.format(file))
				merged_tree = CallTree()
				tree_aggregator = CallTreeAggregator()
				xdebug_parser = XdebugCachegrindFsaParser(file)
				tree = XdebugCachegrindTreeBuilder(xdebug_parser).get_tree()
				merged_tree.merge(tree)
				merged_tree = tree_aggregator.aggregate_call_paths(merged_tree)
				merged_tree.filter_inclusive_time(1)
				strout = strout + '<script type="bogus" class="data-dot" data-name="{0}">{1}</script>\n'.format(os.path.basename(file), DotBuilderm().get_dot(merged_tree, DotNodeStyler,os.path.basename(file)))
				print ('Save: {0}.DOT'.format(os.path.basename(file)))



		lines = []
		with open('./templates/index.html') as infile:
			for line in infile:
				line = line.replace('%%script_graf_data%%', strout)
				lines.append(line)
		with open(sys.argv[1], 'w') as outfile:
			for line in lines:
				outfile.write(line)

	getsubs(directory)
